charge_time <- as.integer(time_length(difftime(as.Date(today()),as.Date(charge_date)), "years"))
years_in_charge <- table(charge_time)
chargeplt <- barplot(years_in_charge,
xlab = "Years in charge",
ylab = "Number of mayors",
main = "Distribution of the charge times",
col = "azure3",
density = 70)
complete2020 <- years_in_charge[["4"]]
complete2021 <- years_in_charge[["5"]]
cat(paste("The number of mayors that are going to complete their mandate this year is", complete2020, "\n"))
cat(paste("The number of mayors that are going to complete their mandate in 2021 is", complete2021))
library(lubridate)
#
sindaci <- read.csv2("sindaciincarica.csv", skip=2)
head(sindaci)
#
sex <- table(sindaci$sesso)
barplot(sex,
xlab = "Sex",
ylab = "Number of mayors",
main = "Gender distribution among the mayors",
col = "coral3",
density = 70)
#
town_prov <- table(sindaci$codice_provincia)
barplot(town_prov,
xlab = "Province ID",
ylab = "Number of cities",
main = "Number of cities per province",
col = "darkolivegreen3",
density = 70)
town_reg <- table(sindaci$codice_regione)
barplot(town_reg,
xlab = "Region ID",
ylab = "Number of cities",
main = "Number of cities per region",
col = "darkorchid3",
density = 70)
#
datenascita <- format(as.Date(sindaci$data_nascita, format = "%d/%m/%Y"),"%Y-%m-%d")
ages <- as.integer(time_length(difftime(as.Date(today()),as.Date(datenascita)), "years"))
birth <- table(ages)
barplot(birth,
xlab = "Year",
ylab = "Number of mayors born",
main = "Distribution of the age (years only) of the mayors",
col = "deepskyblue3",
density = 70)
#
# invece di usare data_elezione penso sia pi첫 preciso usare data_entrata_in_carica
charge_date <- format(as.Date(sindaci$data_entrata_in_carica, "%d/%m/%Y"), "%Y-%m-%d")
charge_time <- as.integer(time_length(difftime(as.Date(today()),as.Date(charge_date)), "years"))
years_in_charge <- table(charge_time)
chargeplt <- barplot(years_in_charge,
xlab = "Years in charge",
ylab = "Number of mayors",
main = "Distribution of the charge times",
col = "azure3",
density = 70)
complete2020 <- years_in_charge[["4"]]
complete2021 <- years_in_charge[["5"]]
cat(paste("The number of mayors that are going to complete their mandate this year is", complete2020, "\n"))
cat(paste("The number of mayors that are going to complete their mandate in 2021 is", complete2021))
library(lubridate)
#
sindaci <- read.csv2("sindaciincarica.csv", skip=2)
head(sindaci)
#
sex <- table(sindaci$sesso)
barplot(sex,
xlab = "Sex",
ylab = "Number of mayors",
main = "Gender distribution among the mayors",
col = "coral3",
density = 70)
#
town_prov <- table(sindaci$codice_provincia)
barplot(town_prov,
xlab = "Province ID",
ylab = "Number of cities",
main = "Number of cities per province",
col = "darkolivegreen3",
density = 70)
town_reg <- table(sindaci$codice_regione)
barplot(town_reg,
xlab = "Region ID",
ylab = "Number of cities",
main = "Number of cities per region",
col = "darkorchid3",
density = 70)
#
datenascita <- format(as.Date(sindaci$data_nascita, format = "%d/%m/%Y"),"%Y-%m-%d")
ages <- as.integer(time_length(difftime(as.Date(today()),as.Date(datenascita)), "years"))
birth <- table(ages)
barplot(birth,
xlab = "Year",
ylab = "Number of mayors born",
main = "Distribution of the age (years only) of the mayors",
col = "deepskyblue3",
density = 70)
#
# invece di usare data_elezione penso sia pi첫 preciso usare data_entrata_in_carica
charge_date <- format(as.Date(sindaci$data_entrata_in_carica, "%d/%m/%Y"), "%Y-%m-%d")
charge_time <- as.integer(time_length(difftime(as.Date(today()),as.Date(charge_date)), "years"))
years_in_charge <- table(charge_time)
chargeplt <- barplot(years_in_charge,
xlab = "Years in charge",
ylab = "Number of mayors",
main = "Distribution of the charge times",
col = "azure3",
density = 70)
complete2020 <- years_in_charge[["4"]]
complete2021 <- years_in_charge[["3"]]
cat(paste("The number of mayors that are going to complete their mandate this year is", complete2020, "\n"))
cat(paste("The number of mayors that are going to complete their mandate in 2021 is", complete2021))
years_in_charge
library(lubridate)
#
sindaci <- read.csv2("sindaciincarica.csv", skip=2)
head(sindaci)
#
sex <- table(sindaci$sesso)
barplot(sex,
xlab = "Sex",
ylab = "Number of mayors",
main = "Gender distribution among the mayors",
col = "coral3",
density = 70)
#
town_prov <- table(sindaci$codice_provincia)
barplot(town_prov,
xlab = "Province ID",
ylab = "Number of cities",
main = "Number of cities per province",
col = "darkolivegreen3",
density = 70)
town_reg <- table(sindaci$codice_regione)
barplot(town_reg,
xlab = "Region ID",
ylab = "Number of cities",
main = "Number of cities per region",
col = "darkorchid3",
density = 70)
#
datenascita <- format(as.Date(sindaci$data_nascita, format = "%d/%m/%Y"),"%Y-%m-%d")
ages <- as.integer(time_length(difftime(as.Date(today()),as.Date(datenascita)), "years"))
birth <- table(ages)
barplot(birth,
xlab = "Year",
ylab = "Number of mayors born",
main = "Distribution of the age (years only) of the mayors",
col = "deepskyblue3",
density = 70)
#
# invece di usare data_elezione penso sia pi첫 preciso usare data_entrata_in_carica
charge_date <- format(as.Date(sindaci$data_entrata_in_carica, "%d/%m/%Y"), "%Y-%m-%d")
charge_time <- as.integer(time_length(difftime(as.Date(today()),as.Date(charge_date)), "years"))
years_in_charge <- table(charge_time)
chargeplt <- barplot(years_in_charge,
xlab = "Years in charge",
ylab = "Number of mayors",
main = "Distribution of the charge times",
col = "azure3",
density = 70)
complete2020 <- years_in_charge[["4"]]
complete2021 <- years_in_charge[["3"]]
cat(paste("The number of mayors that are going to complete their mandate this year is", complete2020, "\n"))
cat(paste("The number of mayors that are going to complete their mandate in 2021 is", complete2021))
xn <- seq(-10,10,0.1)
d_norm <- dnorm(xn,mean=0,sd=2)
p_norm <- pnorm(xn,0,2)
plot(xn, d_norm,
type = "l", # Line plot
main = "pdf of the normal distribution",
xlab = "x")
plot(xn, p_norm,
type = "l", # Line plot
main = "cdf of the normal distribution",
xlab = "x")
xp <- seq(-100,100,1)
d_pois <- dpois(xp,lambda = 40)
p_pois <- ppois(xp,lambda = 40)
plot(xp, d_pois,
type = "l", # Line plot
main = "pdf of the Poisson distribution",
xlab = "x")
plot(xp, p_pois,
type = "l", # Line plot
main = "cdf of the Poisson distribution",
xlab = "x")
xg <- seq(0,100,1)
d_geom <- dgeom(xg,prob=0.3)
p_geom <- pgeom(xg,prob=0.3)
plot(xg, d_geom,
type = "l", # Line plot
main = "pdf of the geometric distribution",
xlab = "x")
plot(xg, p_geom,
type = "l", # Line plot
main = "cdf of the geometric distribution",
xlab = "x")
xe <- seq(0,100,1)
d_exp <- dexp(xe,rate=0.2)
p_exp <- pexp(xe,rate=0.2)
plot(xe, d_exp,
type = "l", # Line plot
main = "pdf of the exponential distribution",
xlab = "x")
plot(xe, p_exp,
type = "l", # Line plot
main = "cdf of the exponential distribution",
xlab = "x")
xb <- seq(0,200,1)
d_bin <- dbinom(xb,size=80,prob=0.3)
p_bin <- pbinom(xb,size=80,prob=0.3)
plot(xb, d_bin,
type = "l", # Line plot
main = "pdf of the binomial distribution",
xlab = "x")
plot(xb, p_bin,
type = "l", # Line plot
main = "cdf of the binomial distribution",
xlab= "x")
x <- c(15.58, 15.9, 16, 16.1, 16.2)
p1 <- c(0.15, 0.21, 0.35, 0.15, 0.14)
p2 <- c(0.14, 0.05, 0.64, 0.08, 0.09)
df <- data.frame(x, p1, p2)
m1 <- sum(df[,1]*df[2])
m2 <- sum(df[,1]*df[3])
v1 <- sum(df[,1]**2*df[,2]) - m1**2
v2 <- sum(df[,1]**2*df[,3]) - m2**2
cat(paste("Method 1. E[X] =", m1, "Var(X) =", v1, "\n"))
cat(paste("Method 2. E[X] =", m2, "Var(X) =", v2))
# a)
set.seed(5)
m <- 30
r <- 1/30
people <- 50
x <- seq(0,120,10)
wait_t <- rexp(people,rate=r)
hist(wait_t,
breaks = 12,
xlab="wait time",
main = "Waiting time for 50 people",
col = "cadetblue",
density = 60)
# b)
p_less10 <- pexp(x[2], r)
cat(paste("The probability that a person waits for less than 10 minutes is", p_less10, "\n"))
# c)
m <- mean(wait_t)
cat(paste("The mean is", m, "\n"))
cat(paste("The expected value of the exponential distribution is", 1/r, "\n"))
# d)
p_more60 <- 1-pexp(x[7], r)
cat(paste("The probability that a person waits for more than 1 hour is", p_more60))
typo <- 1/3
prob_atleastonetypo <- 1 - ppois(0,lambda = typo)
cat(paste("The probability that there is at least one typo on a specific page is", prob_atleastonetypo))
xp <- seq(0,7,1)
d_pois <- dpois(xp,lambda = typo)
p_pois <- ppois(xp,lambda = typo)
plot(xp, d_pois,
type = "b",
main = "pdf of the Poisson distribution",
xlab = "errors in a page",
ylab = "probability")
plot(xp, p_pois,
type = "b",
main = "cdf of the Poisson distribution",
xlab = "error in a page",
ylab = "probability")
p_ace <- 4/52
draws <- 10
pr <- dbinom(1,draws,p_ace)
paste("The probability that at least 10 draws are needed to find an ace is", pr)
library(lubridate)
#
sindaci <- read.csv2("sindaciincarica.csv", skip=2)
head(sindaci)
#
sex <- table(sindaci$sesso)
barplot(sex,
xlab = "Sex",
ylab = "Number of mayors",
main = "Gender distribution among the mayors",
col = "coral3",
density = 70)
#
town_prov <- table(sindaci$codice_provincia)
barplot(town_prov,
xlab = "Province ID",
ylab = "Number of cities",
main = "Number of cities per province",
col = "darkolivegreen3",
density = 70)
town_reg <- table(sindaci$codice_regione)
barplot(town_reg,
xlab = "Region ID",
ylab = "Number of cities",
main = "Number of cities per region",
col = "darkorchid3",
density = 70)
#
datenascita <- format(as.Date(sindaci$data_nascita, format = "%d/%m/%Y"),"%Y-%m-%d")
ages <- as.integer(time_length(difftime(as.Date(today()),as.Date(datenascita)), "years"))
birth <- table(ages)
barplot(birth,
xlab = "Year",
ylab = "Number of mayors born",
main = "Distribution of the age (years only) of the mayors",
col = "deepskyblue3",
density = 70)
#
# invece di usare data_elezione penso sia pi첫 preciso usare data_entrata_in_carica
charge_date <- format(as.Date(sindaci$data_entrata_in_carica, "%d/%m/%Y"), "%Y-%m-%d")
charge_time <- as.integer(time_length(difftime(as.Date(today()),as.Date(charge_date)), "years"))
years_in_charge <- table(charge_time)
chargeplt <- barplot(years_in_charge,
xlab = "Years in charge",
ylab = "Number of mayors",
main = "Distribution of the charge times",
col = "azure3",
density = 70)
complete2020 <- years_in_charge[["4"]]
complete2021 <- years_in_charge[["3"]]
cat(paste("The number of mayors that are going to complete their mandate this year is", complete2020, "\n"))
cat(paste("The number of mayors that are going to complete their mandate in 2021 is", complete2021))
# a)
set.seed(5)
m <- 30
r <- 1/30
people <- 50
x <- seq(0,120,10)
wait_t <- rexp(people,rate=r)
hist(wait_t,
breaks = 12,
xlab="wait time",
main = "Waiting time for 50 people",
col = "cadetblue",
density = 40)
# b)
p_less10 <- pexp(x[2], r)
cat(paste("The probability that a person waits for less than 10 minutes is", p_less10, "\n"))
# c)
m <- mean(wait_t)
cat(paste("The mean is", m, "\n"))
cat(paste("The expected value of the exponential distribution is", 1/r, "\n"))
# d)
p_more60 <- 1-pexp(x[7], r)
cat(paste("The probability that a person waits for more than 1 hour is", p_more60))
library(lubridate)
#
sindaci <- read.csv2("sindaciincarica.csv", skip=2)
head(sindaci)
#
sex <- table(sindaci$sesso)
barplot(sex,
xlab = "Sex",
ylab = "Number of mayors",
main = "Gender distribution among the mayors",
col = "coral3",
density = 40)
#
town_prov <- table(sindaci$codice_provincia)
barplot(town_prov,
xlab = "Province ID",
ylab = "Number of cities",
main = "Number of cities per province",
col = "darkolivegreen3",
density = 40)
town_reg <- table(sindaci$codice_regione)
barplot(town_reg,
xlab = "Region ID",
ylab = "Number of cities",
main = "Number of cities per region",
col = "darkorchid3",
density = 40)
#
datenascita <- format(as.Date(sindaci$data_nascita, format = "%d/%m/%Y"),"%Y-%m-%d")
ages <- as.integer(time_length(difftime(as.Date(today()),as.Date(datenascita)), "years"))
birth <- table(ages)
barplot(birth,
xlab = "Year",
ylab = "Number of mayors born",
main = "Distribution of the age (years only) of the mayors",
col = "deepskyblue3",
density = 40)
#
# invece di usare data_elezione penso sia pi첫 preciso usare data_entrata_in_carica
charge_date <- format(as.Date(sindaci$data_entrata_in_carica, "%d/%m/%Y"), "%Y-%m-%d")
charge_time <- as.integer(time_length(difftime(as.Date(today()),as.Date(charge_date)), "years"))
years_in_charge <- table(charge_time)
chargeplt <- barplot(years_in_charge,
xlab = "Years in charge",
ylab = "Number of mayors",
main = "Distribution of the charge times",
col = "azure3",
density = 40)
complete2020 <- years_in_charge[["4"]]
complete2021 <- years_in_charge[["3"]]
cat(paste("The number of mayors that are going to complete their mandate this year is", complete2020, "\n"))
cat(paste("The number of mayors that are going to complete their mandate in 2021 is", complete2021))
p_ace <- 4/52
draws <- 10
pr <- pbinom(1,draws,p_ace)
paste("The probability that at least 10 draws are needed to find an ace is", pr)
p_ace <- 4/52
draws <- 10
pr <- dbinom(1,draws,p_ace)
paste("The probability that at least 10 draws are needed to find an ace is", pr)
p_ace <- 4/52
draws <- 10
pr <- (1-p_ace)^9
paste("The probability that at least 10 draws are needed to find an ace is", pr)
p_ace <- 4/52
pr <- (1-p_ace)^9
pr1 <- dbinom(2, 9, p_ace)
paste("The probability that at least 10 draws are needed to find an ace is", pr1)
p_ace <- 4/52
pr <- (1-p_ace)^9
pr1 <- dbinom(1, 9, p_ace)
paste("The probability that at least 10 draws are needed to find an ace is", pr1)
p_ace <- 4/52
pr <- (1-p_ace)^9
pr1 <- 1-pbinom(9, 10, p_ace)
paste("The probability that at least 10 draws are needed to find an ace is", pr1)
p_ace <- 4/52
pr <- (1-p_ace)^9
pr1 <- 1-pbinom(1, 10, p_ace)
paste("The probability that at least 10 draws are needed to find an ace is", pr1)
p_ace <- 4/52
pr <- (1-p_ace)^9
pr1 <- pbinom(1, 10, p_ace)
paste("The probability that at least 10 draws are needed to find an ace is", pr1)
p_ace <- 4/52
pr <- (1-p_ace)^9
paste("The probability that at least 10 draws are needed to find an ace is", pr)
p_ace <- 4/52
pr <- (1-p_ace)^9
pr1 <- dgeom(9, p_ace)
paste("The probability that at least 10 draws are needed to find an ace is", pr1)
p_ace <- 4/52
pr <- (1-p_ace)^9
pr1 <- pgeom(9, p_ace)
paste("The probability that at least 10 draws are needed to find an ace is", pr1)
p_ace <- 4/52
pr <- (1-p_ace)^9
pr1 <- pgeom(10, p_ace)
paste("The probability that at least 10 draws are needed to find an ace is", pr1)
p_ace <- 4/52
pr <- (1-p_ace)^9
pr1 <- pgeom(9, p_ace)
paste("The probability that at least 10 draws are needed to find an ace is", pr1)
p_ace <- 4/52
pr <- (1-p_ace)^9
pr1 <- dgeom(9, p_ace)
paste("The probability that at least 10 draws are needed to find an ace is", pr1)
p_ace <- 4/52
pr <- (1-p_ace)^9
pr1 <- 1-dgeom(9, p_ace)-dgeom(8, p_ace)-dgeom(7, p_ace)-dgeom(6, p_ace)-dgeom(5, p_ace)-dgeom(4, p_ace)-dgeom(3, p_ace)-dgeom(1, p_ace)-dgeom(1, p_ace)
paste("The probability that at least 10 draws are needed to find an ace is", pr1)
p_ace <- 4/52
pr <- (1-p_ace)^9
pr1 <- 1-dgeom(9, p_ace)-dgeom(8, p_ace)-dgeom(7, p_ace)-dgeom(6, p_ace)-dgeom(5, p_ace)-dgeom(4, p_ace)-dgeom(3, p_ace)-dgeom(1, p_ace)-dgeom(1, p_ace)-dgeom(0, p_ace)
paste("The probability that at least 10 draws are needed to find an ace is", pr1)
p_ace <- 4/52
pr <- (1-p_ace)^9
pr1 <- 1-dgeom(9, p_ace)-dgeom(8, p_ace)-dgeom(7, p_ace)-dgeom(6, p_ace)-dgeom(5, p_ace)-dgeom(4, p_ace)-dgeom(3, p_ace)-dgeom(1, p_ace)-dgeom(1, p_ace)
paste("The probability that at least 10 draws are needed to find an ace is", pr1)
p_ace <- 4/52
pr <- (1-p_ace)^9
pr1 <- dgeom(9, p_ace)
paste("The probability that at least 10 draws are needed to find an ace is", pr1)
p_ace <- 4/52
pr <- (1-p_ace)^9
pr1 <- 1--dgeom(8, p_ace)-dgeom(7, p_ace)-dgeom(6, p_ace)-dgeom(5, p_ace)-dgeom(4, p_ace)-dgeom(3, p_ace)-dgeom(1, p_ace)-dgeom(1, p_ace)
paste("The probability that at least 10 draws are needed to find an ace is", pr1)
p_ace <- 4/52
pr <- (1-p_ace)^9
pr1 <- 1-dgeom(8, p_ace)-dgeom(7, p_ace)-dgeom(6, p_ace)-dgeom(5, p_ace)-dgeom(4, p_ace)-dgeom(3, p_ace)-dgeom(1, p_ace)-dgeom(1, p_ace)
paste("The probability that at least 10 draws are needed to find an ace is", pr1)
p_ace <- 4/52
pr <- (1-p_ace)^9
pr1 <- 1-dgeom(8, p_ace)-dgeom(7, p_ace)-dgeom(6, p_ace)-dgeom(5, p_ace)-dgeom(4, p_ace)-dgeom(3, p_ace)-dgeom(1, p_ace)-dgeom(1, p_ace)-dgeom(0, p_ace)
paste("The probability that at least 10 draws are needed to find an ace is", pr1)
p_ace <- 4/52
pr <- (1-p_ace)^9
pr1 <- 1-dgeom(8, p_ace)-dgeom(7, p_ace)-dgeom(6, p_ace)-dgeom(5, p_ace)-dgeom(4, p_ace)-dgeom(3, p_ace)-dgeom(1, p_ace)-dgeom(1, p_ace)-dgeom(0, p_ace)
paste("The probability that at least 10 draws are needed to find an ace is", pr1)
paste("The probability that at least 10 draws are needed to find an ace is", pr)
p_ace <- 4/52
pr <- (1-p_ace)^9
pr1 <- 1-dgeom(7, p_ace)-dgeom(6, p_ace)-dgeom(5, p_ace)-dgeom(4, p_ace)-dgeom(3, p_ace)-dgeom(1, p_ace)-dgeom(1, p_ace)-dgeom(0, p_ace)
paste("The probability that at least 10 draws are needed to find an ace is", pr1)
paste("The probability that at least 10 draws are needed to find an ace is", pr)
p_ace <- 4/52
pr <- (1-p_ace)^9
pr1 <- 1-dgeom(8, p_ace)-dgeom(7, p_ace)-dgeom(6, p_ace)-dgeom(5, p_ace)-dgeom(4, p_ace)-dgeom(3, p_ace)-dgeom(1, p_ace)-dgeom(1, p_ace)-dgeom(0, p_ace)
paste("The probability that at least 10 draws are needed to find an ace is", pr1)
paste("The probability that at least 10 draws are needed to find an ace is", pr)
p_ace <- 4/52
pr <- (1-p_ace)^8
pr1 <- 1-dgeom(8, p_ace)-dgeom(7, p_ace)-dgeom(6, p_ace)-dgeom(5, p_ace)-dgeom(4, p_ace)-dgeom(3, p_ace)-dgeom(1, p_ace)-dgeom(1, p_ace)-dgeom(0, p_ace)
paste("The probability that at least 10 draws are needed to find an ace is", pr1)
paste("The probability that at least 10 draws are needed to find an ace is", pr)
p_ace <- 4/52
pr <- (1-p_ace)^9
pr1 <- 1-dgeom(8, p_ace)-dgeom(7, p_ace)-dgeom(6, p_ace)-dgeom(5, p_ace)-dgeom(4, p_ace)-dgeom(3, p_ace)-dgeom(1, p_ace)-dgeom(1, p_ace)-dgeom(0, p_ace)
paste("The probability that at least 10 draws are needed to find an ace is", pr1)
paste("The probability that at least 10 draws are needed to find an ace is", pr)
